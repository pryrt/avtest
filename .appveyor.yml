environment:
  secret_phrase:
    secure: aDUp5TrFn/tjuLp679VfU7STg4Gq+62NdypFwqhFRJg=
  matrix:
    - perl: default
      AUTOMATED_TESTING: 1
    #- perl: default
    #  AUTOMATED_TESTING: 1
    #  myBits: --FORCEx86

skip_tags: true

install:
  - IF NOT DEFINED myBits ( set myBits= & echo myBits equals space )
  - echo myBits=_%myBits%_
  - IF NOT DEFINED perl set perl=default
  - echo install Perl v%perl%...
  - IF /I %perl%==default (cinst %myBits% strawberryperl) ELSE (cinst %myBits% strawberryperl --version %perl%)
  - IF NOT EXIST "chocologs" MKDIR chocologs
  - IF EXIST "c:\ProgramData\chocolatey\logs" COPY /Y "c:\ProgramData\chocolatey\logs" "chocologs"
  - set PATH=C:\strawberry\perl\bin;C:\strawberry\perl\site\bin;C:\strawberry\c\bin;%PATH%
  - perl -le "print qq(installed perl v$])"
  - IF NOT EXIST c:\strawberry\perl\bin\cpanm.bat (cpan -i App::cpanminus)
  - cpanm App::cpanminus
  - cpanm --installdeps .
  #- cpanm Module::Signature
  - echo ================================================================
  - gpg --list-keys
  - echo retrieve keyfile and import with ultimate trust
  - perl -e "print $ENV{$_} for qw/secret_phrase/" | gpg -o decrypted.asc --batch --yes --passphrase-fd 0 --decrypt encrypted.asc
  - perl -e "print $ENV{$_} for qw/secret_phrase/" | gpg --batch --yes --passphrase-fd 0 --import decrypted.asc
  - del decrypted.asc
  #- perl -le "print for qw/trust 5 y quit/, q()" > gpgscript
  #- gpg --no-tty --command-fd 0 --edit-key 0x5F40919C58146C3D < gpgscript
  #- del gpgscript
  - perl -le "print for qw/trust 5 y quit/, q()" | gpg --no-tty --command-fd 0 --edit-key 0x5F40919C58146C3D
  - gpg --list-keys


build_script:
  - echo build using Perl=%perl%...
  - perl -le "print qq(build with perl v$])"
  - set MM_SIGN_DIST=1
  - perl Makefile.PL
  - FOR /F "tokens=* USEBACKQ" %%F IN (`perl -MConfig -e "print $Config{make}"`) DO ( SET mymake=%%F )
  - echo MyMake = %mymake%
  - echo =====
  - git clone -q --branch=debug https://github.com/pryrt/module-signature.git C:\projects\module-signature
  - dir /O:d c:\projects\
  - dir /O:d c:\projects\module-signature\
  - cpanm c:\projects\module-signature\ & REM installing it should create the .bat version of script in PATH
  #- perl -le "print qq(perl c:/projects/module-signature/script/cpansign %*)" > c:\projects\module-signature\script\cpansign.bat
  #- set PERL5LIB=C:\projects\module-signature\lib
  #- PATH=C:\projects\module-signature\script;%PATH%

after_build:
  - IF EXIST "c:\users\appveyor\.cpanm\work\" (MOVE /Y c:\users\appveyor\.cpanm\work .)

test_script:
  - echo test Perl=%perl%...
  #- perl -le "print qq(test with perl v$])"
  #- perl -V:ptrsize -V:ivsize -V:myuname
  # cmd/c before %mymake% to avoid appveyor parse error with %mymake% as first word of command
  - where cpansign
  - cpansign --help
  - cmd/c %mymake% test
  - echo the next command might freeze ... but I hope it gives me more clarity as to what's going wrong
  - cmd/c %mymake% dist
  - dir /O:d

on_failure:
  - FOR /D %%D in ( c:\users\appveyor\.cpanm\work\* ) DO ( type %%D\*.log )

artifacts:
  - path: chocologs
  - path: work\**\*.log
